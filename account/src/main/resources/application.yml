server:
  port: 8081

spring:
  application:
    name: acount
  profiles:
    active: ${PROFILES_ACTIVE:local}
  cloud:
    nacos:
      discovery:
        username: ${NACOS_USERNAME:}
        password: ${NACOS_PWD:}
        server-addr: ${NACOS_ADDR:}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_URL}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: ${DB_USERNAME:}
    password: ${DB_PWD:}

  redis:
    client-type: jedis
    host: ${REDIS_URL:}
    password: ${REDIS_PWD:}
    port: 6379
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池中的最大空闲连接
        max-idle: 100
        # 连接池中的最小空闲连接
        min-idle: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 60000
  shardingsphere:
    datasource:
      names: ds0
      ds0:
        connectionTimeoutMilliseconds: 30000
        driver-class-name: com.mysql.cj.jdbc.Driver
        idleTimeoutMilliseconds: 60000
        jdbc-url: jdbc:mysql://${DB_URL}/account?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 50
        minPoolSize: 50
        password: ${DB_PWD}
        type: com.zaxxer.hikari.HikariDataSource
        username: ${DB_USERNAME}
    props:
      # 打印执行的数据库以及语句
      sql:
        show: true
    sharding:
      tables:
        traffic:
          # 指定traffic表的数据分布情况，配置数据节点,行表达式标识符使用 ${...} 或 $->{...}，但前者与 Spring 本身的文件占位符冲突，所以在 Spring 环境中建议使用 $->{...}
          actual-data-nodes: ds0.traffic_$->{0..1}
          # 水平分表策略+行表达式分片
          table-strategy:
            inline:
              algorithm-expression: traffic_$->{account_no % 2}
              sharding-column: account_no
          #id生成策略
          key-generator:
            column: id
            props:
              worker:
                id: ${workerId}
            #id生成策略
            type: SNOWFLAKE


#配置plus打印sql日志
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


sms:
  app-code: ${APP_CODE:}
  app-secret: ${APP_SECRET:}
  template-id: ${TEMPLATE_ID:}


#阿里云OSS配置
aliyun:
  oss:
    endpoint: oss-cn-shanghai.aliyuncs.com
    access-key-id: ${ACCESS_KEY_ID:}
    access-key-secret: ${ACCESS_KEY_SECRET}
    bucketname: ${BUCKET_NAME}