server:
  port: 8083

spring:
  application:
    name: link
  profiles:
    active: ${PROFILES_ACTIVE:local}
  cloud:
    nacos:
      discovery:
        username: ${NACOS_USERNAME:}
        password: ${NACOS_PWD:}
        server-addr: ${NACOS_ADDR:}
  rabbitmq:
    host: ${RABBITMQ_URL}
    port: 5672
    virtual-host: dev
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PWD}
    listener:
      simple:
        acknowledge-mode: auto
        retry:
          enabled: true
          max-attempts: 4
          initial-interval: 5000
  redis:
    client-type: jedis
    host: ${REDIS_URL:}
    password: ${REDIS_PWD:}
    port: 6379
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池中的最大空闲连接
        max-idle: 100
        # 连接池中的最小空闲连接
        min-idle: 100
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 60000
  shardingsphere:
    datasource:
      names: ds0,ds1,dsa
      ds0:
        connectionTimeoutMilliseconds: 30000
        driver-class-name: com.mysql.cj.jdbc.Driver
        idleTimeoutMilliseconds: 60000
        jdbc-url: jdbc:mysql://${DB_URL}/${DB_LINK_0}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 50
        minPoolSize: 50
        password: ${DB_PWD}
        type: com.zaxxer.hikari.HikariDataSource
        username: ${DB_USERNAME}
      ds1:
        connectionTimeoutMilliseconds: 30000
        driver-class-name: com.mysql.cj.jdbc.Driver
        idleTimeoutMilliseconds: 60000
        jdbc-url: jdbc:mysql://${DB_URL}/${DB_LINK_1}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 50
        minPoolSize: 50
        password: ${DB_PWD}
        type: com.zaxxer.hikari.HikariDataSource
        username: ${DB_USERNAME}
      dsa:
        connectionTimeoutMilliseconds: 30000
        driver-class-name: com.mysql.cj.jdbc.Driver
        idleTimeoutMilliseconds: 60000
        jdbc-url: jdbc:mysql://${DB_URL}/${DB_LINK_A}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 50
        minPoolSize: 50
        password: ${DB_PWD}
        type: com.zaxxer.hikari.HikariDataSource
        username: ${DB_USERNAME}
    props:
      # 打印执行的数据库以及语句
      sql:
        show: true
    sharding:
      default-key-generator:
        column: id
        type: SNOWFLAKE
        props:
          worker:
            id: ${workerId}
      tables:
        link_group:
          # 水平分表策略+行表达式分片
          database-strategy:
            inline:
              algorithm-expression: ds$->{account_no % 2}
              sharding-column: account_no
        short_link:
          database-strategy:
            standard:
              sharding-column: code
              precise-algorithm-class-name: com.cyx.strategy.CustomDBPreciseShardingAlgorithm
          actual-data-nodes: ds0.short_link,ds1.short_link,dsa.short_link
          table-strategy:
            standard:
              sharding-column: code
              precise-algorithm-class-name: com.cyx.strategy.CustomTablePreciseShardingAlgorithm
        group_code_mapping:
          database-strategy:
            inline:
              sharding-column: account_no
              algorithm-expression: ds$->{account_no % 2}
          actual-data-nodes: ds$->{0..1}.group_code_mapping_$->{0..1}
          table-strategy:
            inline:
              sharding-column: group_id
              algorithm-expression: group_code_mapping_$->{group_id % 2}

#配置plus打印sql日志
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl